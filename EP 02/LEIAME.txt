Versões do Python utilizadas para teste:
- Python 3.7.13
- Python 3.10.4

Funcionamento do Programa (descrição das funções):
- Função auxiliar:
  -- nos_pesos(n):
	guarda os valores fornecidos no .txt, com os pesos e nós no intervalo [-1,1]
	recebe o inteiro n = 6, 8 ou 10, fornece a lista com pesos e nós para dado n


- Funções principais:
  -- integral(f, n):
	input: função f(x), inteiro n = 6, 8 ou 10
	output: resultado da integral de f no intervalo [-1,1]
	Obs.: é necessário declarar f como um objeto da classe FUNÇÃO:
		f = lambda x : "expressão" ou def f(x): return "expressão"

  -- integral_a_to_b(f, a, b, n)
	input: função f(x), float a, b, inteiro n = 6, 8 ou 10
	output: resultado da integral de f no intervalo [a,b]
	Obs.: imprime o RESULTADO da integral. Em alguns exemplos, compara-se o RESULTADO
	com um valor CALC, obtido por calculadora. A diferença entre os dois resulta no ERRO apresentado.
	Obs2.: é necessário declarar f como um objeto da classe FUNÇÃO:
		f = lambda x : "expressão" ou def f(x): return "expressão"

  -- integral_dupla(f, a, b, c, d, n)
	input: função f(x,y), float a, b, , funções c, d, inteiro n = 6, 8 ou 10
	output: resultado da integral dupla de f na região [a,b] x [c(x),d(x)]
	Obs.: imprime o RESULTADO da integral. Em alguns exemplos, compara-se o RESULTADO
		com um valor CALC, obtido por calculadora, ou demonstrado no relatório. A diferença 
		entre os dois resulta no ERRO apresentado.
	Obs2.: é necessário declarar f como um objeto da classe FUNÇÃO:
		f = lambda x, y : "expressão" ou def f(x, y): return "expressão"
	Obs3.: o mesmo ocorre com c e d: são objetos da classe FUNÇÃO:
		c = lambda x : "expressão1", d = lambda x : "expressão2"
	Obs4.: "integral_dupla" resolve integrais duplas cujos extremos variáveis são funções de x, apenas.
		Assim, caso o problema forneça os extremos em y, deve-se trocar todos os x por y e os y por x,
		como apresentado no Exemplo 4 do relatório.
